import requests, openai


"""
Function which makes a request to a specified endpoint.
    @param endpoint - string: The URL of the endpoint.
    @param method - string: The request method, which is only GET at the moment.
    @returns - dict: The response returned by the endpoint following the request.
"""
def makeHTTPRequest(endpoint, method):

    # empty response by default
    response = {}

    if method == "get":
        response = requests.get(endpoint, timeout=10) # 10 second timeout by default

    return response


"""
Function which makes a request to the specified OpenAI Large Language Model based on a given text, and returns the response.
    @param text - string: The text question to be given.
    @param modelEngine - string: The OpenAI Large Language Model Engine to be used.
    @param randomness - float: The desired randomness of the generated response (temperature), between 0 and 1.
    @param openaiKey - string: The OpenAI API key to be used.
    @returns - string: The response generated by the model.

Possible models:
    - gpt-3.5-turbo: ChatGPT
    - text-davinci-003: best
    - text-curie-001: fast
    - text-babbage-001: faster
    - text-ada-001: fastest
"""
def makeLLMRequest(text, modelEngine, randomness, openaiKey):

    openai.api_key = openaiKey

    response = ""

    # special case if ChatGPT model
    if modelEngine in ["gpt-3.5-turbo", "gpt-3.5-turbo-0301"]:
        request = openai.ChatCompletion.create(
            model = modelEngine,
            temperature = randomness,
            messages = [
                {"role": "user", "content": text}
            ]
        )

        for choice in request.choices:
            response += choice.message.content

    # other models
    else:
        request = openai.Completion.create(
            engine = modelEngine,
            prompt = text,
            max_tokens = 1024,
            n = 1,
            stop = None,
            temperature = randomness, # how much randomness in the response
        )

        response = request.choices[0].text

    return response
